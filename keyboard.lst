C51 COMPILER V7.50   KEYBOARD                                                              09/22/2022 16:47:30 PAGE 1   


C51 COMPILER V7.50, COMPILATION OF MODULE KEYBOARD
OBJECT MODULE PLACED IN keyboard.obj
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE customer\keyboard.c LARGE BROWSE DEBUG OBJECTEXTEND PRINT(.\keyboard.lst) O
                    -BJECT(keyboard.obj)

line level    source

   1          //*************************************************************************//
   2          //* Name                                :   display_cal.c
   3          //* Vision                              :       V-Nov07_12
   4          //* Project                             :   All project
   5          //* Function                    :   Solidic 电子称 显存计算文件
   6          //* $Author                             :   superc
   7          //*
   8          //* Copyright 2012 by solidic
   9          //*
  10          //* Recode:
  11          //*                                             1: 2012-11-07  First Creat By Superc
  12          //*
  13          //*
  14          //*
  15          //*************************************************************************//
  16          #include <REG52.H>
  17          #include <math.h>
  18          //**************************************************************************
  19          // -- 全部头文件 集中管理 ---- ，版本修改文件名会变动 ---  必须修改 这个文件
  20          //**************************************************************************
  21          //#include "./_solidic/head_file_version.h"
  22          #include "./customer/keyboard.h"
  23          #include "./_scale/dvr_def.h"
  24          
  25          
  26          unsigned char Key;
  27          unsigned char LastKey;
  28          unsigned char KeyState=0;
  29          
  30          struct strTimers strTimer;
  31          
  32          
  33          #define KEY_D0_ON                       P2 |= 0x02 
  34          #define KEY_D0_OFF                      P2 &= 0xFD 
  35          
  36          void delay_ms(unsigned int num)
  37          {       
  38   1              unsigned int i;
  39   1          unsigned char j;
  40   1              for(i= 0;i<num;i++){    //(SDI5219) ??1ms
  41   2                      for(j=0;j<195;j++)
  42   2                              ;
  43   2      IWDG_KEY_REFRESH; 
  44   2      } 
  45   1      
  46   1      }
  47          
  48          void key_scan(void) {
  49   1        unsigned char k = 0;
  50   1        Key = 0;
  51   1      
  52   1        for (k = 0; k < 5; k++) {
  53   2          KEY_D0 = 1;
  54   2          KEY_D1 = 1;
C51 COMPILER V7.50   KEYBOARD                                                              09/22/2022 16:47:30 PAGE 2   

  55   2          KEY_D2 = 1;
  56   2          KEY_D3 = 1;
  57   2          KEY_D4 = 1;
  58   2          if (k == 0) KEY_D0 = 0;
  59   2          if (k == 1) KEY_D1 = 0;
  60   2          if (k == 2) KEY_D2 = 0;
  61   2          if (k == 3) KEY_D3 = 0;
  62   2          if (k == 4) KEY_D4 = 0;
  63   2          delay_ms(1);
  64   2          if (KEY_K0 != 1) Key = 1 + (k * 4);
  65   2          if (KEY_K1 != 1) Key = 2 + (k * 4);
  66   2          if (KEY_K2 != 1) Key = 3 + (k * 4);
  67   2          if (KEY_K3 != 1) Key = 4 + (k * 4);
  68   2        }
  69   1      
  70   1        if (LastKey == 0 && Key != 0) {
  71   2          KeyState = PRESS; //se presiono
  72   2        } else if (LastKey == Key && Key != 0) {
  73   2          KeyState = PRESSED; //se mantiene presionado
  74   2        } else if (LastKey != 0 && Key == 0) {
  75   2          KeyState = RELEASE; //se solto
  76   2        } else if (LastKey == 0 && Key == 0) {
  77   2          KeyState = 0; //no se ha presionado una tecla
  78   2        }
  79   1        LastKey = Key;
  80   1        if(Key!=0&&KeyState == PRESS)vBeep_Key();
  81   1        IWDG_KEY_REFRESH;
  82   1      }
  83          
  84          
  85          void vBeep_Key(void){
  86   1      
  87   1              /*enum digi_key Value_Key_Press;
  88   1              
  89   1              if(srFlagScale.bCalidadTest == 2){
  90   1                      if(stScaleParam.cBacklight){OnBackLight;}
  91   1              }*/
  92   1              
  93   1      //      if(!strTimer.cFLag_TimerA_On){
  94   1                      strTimer.cFLag_TimerA_End = 0;
  95   1                      Beep_On_Key;
  96   1      //      }
  97   1      
  98   1      
  99   1              /*while(strTimer.cFLag_TimerA_End == 0){
 100   1                      //IWDG->KR = IWDG_KEY_REFRESH;
 101   1              }*/
 102   1              
 103   1              /*do{
 104   1                      Value_Key_Press = vActionKey();         
 105   1              }while(Value_Key_Press != KEY_NULL);
 106   1              
 107   1              if(srFlagScale.bCalidadTest == 2){
 108   1                      //OffBackLight;
 109   1              }
 110   1              
 111   1              KeyPressed = FALSE;*/
 112   1      }
 113          
 114          void vScan_Key(void){
 115   1      }
 116          
C51 COMPILER V7.50   KEYBOARD                                                              09/22/2022 16:47:30 PAGE 3   

 117          enum digi_key vActionKey(void){
 118   1              
 119   1      /*      vReadKey();
 120   1              
 121   1              if(KeyPressed == TRUE){
 122   1                      KeyPressed = FALSE;
 123   1                      
 124   1              if(srFlagScale.bBateriaLow == 0){
 125   1              if(stScaleParam.cBacklight){OnBackLight;}
 126   1                      strTimer.cFLag_TimerJ_Start = 1;
 127   1                      srFlagScale.bBacklight_On = 1;
 128   1              }       
 129   1              
 130   1                      return eKeyTouch;
 131   1              }else{
 132   1                      return KEY_NULL;
 133   1              }*/
 134   1              return 0;
 135   1      }
 136          
 137          void vSound_Saved_Param(void){
 138   1              unsigned char i = 0;
 139   1              
 140   1              for(i=0; i<3; i++){
 141   2                      
 142   2                      vBeep_Key();
 143   2                      
 144   2                      delay_ms(250);
 145   2              }       
 146   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    278    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =     27    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
