C51 COMPILER V7.50   DVR_LCD_SDI1621                                                       09/22/2022 16:47:30 PAGE 1   


C51 COMPILER V7.50, COMPILATION OF MODULE DVR_LCD_SDI1621
OBJECT MODULE PLACED IN dvr_lcd_SDI1621.obj
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE _display\dvr_lcd_SDI1621.c LARGE BROWSE DEBUG OBJECTEXTEND PRINT(.\dvr_lcd_
                    -SDI1621.lst) OBJECT(dvr_lcd_SDI1621.obj)

line level    source

   1          //Creado por Eriberto Romero Hernandez
   2          //Modificado en Sep 22 
   3          #include "./_display/dvr_lcd_SDI1621.h"
   4          
   5          #include <stdio.h>
   6          #include <string.h>
   7          
   8                  SOLIDIC xdata Display;
   9          
  10                  void write_lcd(SOLIDIC Display);
  11                  void LCD_GLASS_Update(void);
  12          
  13          #if DISPLAY_20400047_EN > 0     
  14          const unsigned char xdata cNumber_LCD[10] = { 
  15                          0x5F, //        01011111,       //0
  16                          0x50,   //      01010000,       //1
  17                          0x3D,   //      00111101,               //2
  18                          0x79,   //      01111001,       //3
  19                          0x72,   //      01110010,       //4
  20                          0x6B,   //      01101011,               //5
  21                          0x6F,   //      01101111,               //6
  22                          0x51,   //      01010001,               //7
  23                          0x7F,   //      01111111,               //8
  24                          0X73};//        01110011                //9
  25          
  26          const unsigned char xdata cABC_LCD[28] = {
  27                          0x77,   //      01110111,       //A
  28                          0x6E,   //      01101110,       //b
  29                          0x0F,   //      00001111,       //C
  30                          0x7C,   //      01111100,       //d
  31                          0x2F,   //      00101111, //E
  32                          0x27,   //      00100111,       //F
  33                          0x6F,   //      01101111,       //G
  34                          0x76,   //      01110110,       //H
  35                          0x50,   //      01010000,       //I
  36                          0x5C,   //      01011100,       //J
  37                          0x36,   //      00110110,       //K
  38                          0x0E,   //      00001110,       //L
  39                          0x00,   //      00000000,       //M
  40                          0x64,   //      01100100,       //n
  41                          0x5F,   //      01011111,       //O
  42                          0x37,   //      00110111,       //P
  43                          0x73,   //      01110011,       //q
  44                          0x24,   //      00100100,       //r
  45                          0x6B,   //      01101011,       //S
  46                          0x2E,   //      00101110,       //T
  47                          0x5E,   //      01011110,       //U
  48                          0x4C,   //      01001100,       //V
  49                          0x00,   //      00000000,       //W
  50                          0x00,   //      00000000,       //X
  51                          0x72,   //      01110010,       //Y
  52                          0x3D,   //      00111101,       //Z
  53                          0x20};//        00100000        //-
  54          
C51 COMPILER V7.50   DVR_LCD_SDI1621                                                       09/22/2022 16:47:30 PAGE 2   

  55          #define S_ZERO      0
  56          #define P_PESO_3    1
  57          #define P_PESO_2    2
  58          #define P_PESO_1    3
  59          #define S_TARE      4           
  60          #define S_14        5
  61          #define S_34        6
  62          #define P_TOTAL_2   7
  63          #define P_TOTAL_1   8           
  64          #define S_24        9
  65          #define S_44        10
  66          #define S_Y         11
  67          #define P_PRECIO_3  12
  68          #define P_PRECIO_2  13
  69          #define P_PRECIO_1  14
  70          #define S_X         15
  71                          
  72                  
  73          #else
              const unsigned char xdata cNumber_LCD[10] = { 
                              0x7D, //        01111101,       //0
                              0x60,   //      01100000,       //1
                              0x3E,   //      00111110,               //2
                              0x7A,   //      01111010,       //3
                              0x63,   //      01100011,       //4
                              0x5B,   //      01011011,               //5
                              0x5F,   //      01011111,               //6
                              0x70,   //      01110000,               //7
                              0x7F,   //      01111111,               //8
                              0x7B};  //      01111011                //9
              
              const unsigned char xdata cABC_LCD[28] = {
                              0x77,   //      01110111,       //A
                              0x4F,   //      01001111,       //b
                              0x1D,   //      00011101,       //C
                              0x6E,   //      01101110,       //d
                              0x1F,   //      00011111, //E
                              0x17,   //      00010111,       //F
                              0x5F,   //      01011111,       //G
                              0x67,   //      01100111,       //H
                              0x60,   //      01100000,       //I
                              0x6C,   //      01101000,       //J
                              0x27,   //      01100111,       //K
                              0x0D,   //      00001101,       //L
                              0x00,   //      01000110,       //M
                              0x46,   //      01000110,       //n
                              0x7D,   //      01111101,       //O
                              0x37,   //      00110111,       //P
                              0x73,   //      01110011,       //q
                              0x06,   //      00000110,       //R
                              0x5B,   //      01011011,       //S
                              0x0F,   //      00001111,       //T
                              0x6D,   //      01101101,       //U
                              0x4C,   //      01001100,       //V
                              0x00,   //      01001100,       //W
                              0x00,   //      00001000,       //X
                              0x27,   //      00100111,       //Y
                              0x3E,   //      00111110,       //Z
                              0x02};//        00000010        //-
              
              
              
C51 COMPILER V7.50   DVR_LCD_SDI1621                                                       09/22/2022 16:47:30 PAGE 3   

              #define P_PESO_3    6
              #define P_PESO_2    7
              #define P_PESO_1    8
              #define P_PRECIO_2  1
              #define P_PRECIO_1  2
              #define P_TOTAL_2   9
              #define P_TOTAL_1   3           
              #define S_ZERO      12
              #define S_X         14
              #define S_Y         15  
                              
              #define S_KG        11
              #define S_LB        10          
              #define S_NET       13
              
              #endif
 133          
 134                  // funci¨®n de retardo 10us
 135          void delay_35u(void){   
 136   1              unsigned char j;
 137   1              for(j= 0;j<5;j++);
 138   1      }       
 139          
 140          //****************************************************
 141          // Controlador LCD 1621 bloque compilaci¨®n condicional ------ comenzar -------
 142          //****************************************************
 143          void lcd_unit_write(unsigned char d){
 144   1              unsigned char i;
 145   1              for(i=0;i<8;i++){
 146   2                      if( ( d & 0x80 ) == 0 ) LCD_DATA_OFF;
 147   2                      else LCD_DATA_ON;
 148   2                      LCD_WR_N_OFF;   
 149   2                      delay_35u();    
 150   2          LCD_WR_N_ON;                        
 151   2                      delay_35u();            
 152   2                      d <<= 1;                
 153   2              }
 154   1      }
 155          
 156          
 157          
 158          void LCD_GLASS_Init(void){//int i,j,k;
 159   1              LCD_CS_N_ON;
 160   1              LCD_WR_N_ON;
 161   1              LCD_DATA_ON;
 162   1              delay_35u();
 163   1              delay_35u();    
 164   1              
 165   1              Display.mode=LCD_COMAND;
 166   1              
 167   1              Display.cmd=SYS_EN;
 168   1              write_lcd(Display);//Turn on system oscillator
 169   1              
 170   1              Display.cmd=LCD_ON;     
 171   1              write_lcd(Display);//Turn on LCD bias generator         
 172   1              
 173   1              Display.cmd=BIAS_4;     
 174   1              write_lcd(Display);//LCD 1/2 bias option
 175   1              
 176   1              Display.cmd=COM_4;      
 177   1              write_lcd(Display);//LCD 1/3 bias option 
 178   1                      
C51 COMPILER V7.50   DVR_LCD_SDI1621                                                       09/22/2022 16:47:30 PAGE 4   

 179   1              Display.mode=LCD_DATA;
 180   1      //      Display.addr=0;
 181   1      //      Display.counter=sizeof(Display.LCD_BUF);
 182   1              memset(Display.LCD_BUF, 0x00, sizeof(Display.LCD_BUF));
 183   1              write_lcd(Display);//Write data to the RAM 
 184   1      }
 185          
 186          
 187          
 188          // funci¨®n de escritura LCD
 189          // modo:
 190          // 0: Entrada de comando
 191          // 1: actualizar todas las ¨¢reas
 192          // cmd: comando de codificaci¨®n
 193          // ---- Nota: Mostrar la funci¨®n de la tecla de interrupci¨®n ET0 en la funci¨®n - (Cuando el programa no
             - necesita abrir la interrupci¨®n T0, preste especial atenci¨®n para evitar que la funci¨®n de pantalla abra accidentalme
             -nte la interrupci¨®n T0)
 194          
 195          void write_lcd(SOLIDIC Display){//char mode,unsigned char cmd,unsigned char addr,unsigned char counter)
 196   1              unsigned char i=0;      
 197   1              unsigned char addr=0;   
 198   1              
 199   1              //HAL_NVIC_DisableIRQ(TIM14_IRQn);
 200   1              
 201   1      /*      if(strTimer.cFLag_TimerF_On ==  1 && eAccionScale != scalePreOnDc){//contador autoapagado 15m
 202   1                      if(strTimer.iTimerF > 36){
 203   1                              strTimer.iTimerF-=35;
 204   1                      }
 205   1              }
 206   1              
 207   1              if(strTimer.cFLag_TimerI_On && srFlagScale.bSourceVoltage == SOURCE_BATTERY){ //contador apagado backlite
             - 15seg
 208   1                      if(strTimer.iTimerI > 36){
 209   1                              strTimer.iTimerI-=35;                   
 210   1                      }
 211   1              }*/
 212   1              
 213   1              LCD_CS_N_ON;
 214   1              LCD_WR_N_ON;
 215   1              LCD_DATA_ON;    
 216   1              delay_35u();            
 217   1              LCD_CS_N_OFF;// LCD_DATA_ON;
 218   1              delay_35u();
 219   1              LCD_WR_N_OFF;
 220   1              delay_35u();
 221   1              LCD_WR_N_ON;
 222   1              delay_35u();
 223   1              LCD_DATA_OFF;
 224   1              LCD_WR_N_OFF;
 225   1              delay_35u();
 226   1              LCD_WR_N_ON;
 227   1              delay_35u();
 228   1              if(Display.mode==0)
 229   1                      LCD_DATA_OFF;
 230   1              else 
 231   1                      LCD_DATA_ON;
 232   1              LCD_WR_N_OFF;
 233   1              delay_35u();
 234   1              LCD_WR_N_ON;
 235   1              delay_35u();
 236   1      
 237   1              if(Display.mode == 0){
C51 COMPILER V7.50   DVR_LCD_SDI1621                                                       09/22/2022 16:47:30 PAGE 5   

 238   2                      lcd_unit_write(Display.cmd);            
 239   2                      LCD_WR_N_OFF;
 240   2                      delay_35u();
 241   2                      LCD_WR_N_ON;
 242   2                      delay_35u();
 243   2              }
 244   1              else 
 245   1              {               
 246   2                      addr = 0;
 247   2                      for(i=0;i<6;i++){       // Êý¾ÝÐ´ÈëÃüÁî,·¢ËÍÊ×µØÖ·  Comando de escritura de datos, enviar la primera direcci¨®
             -n
 248   3                              LCD_WR_N_OFF;                   
 249   3                              if( (addr & 0x80) == 0 ) 
 250   3                                      LCD_DATA_OFF;
 251   3                        else 
 252   3                                      LCD_DATA_ON;
 253   3                              delay_35u();
 254   3                              LCD_WR_N_ON;
 255   3                              delay_35u();
 256   3                              addr <<= 1;
 257   3                      }               
 258   2                      for(i=0;i<16;i++)       // Êý¾ÝÐ´ÈëÃüÁî,·¢ËÍÊý¾Ý  Comando de escritura de datos, enviar datos
 259   2                              lcd_unit_write(Display.LCD_BUF[15 - i]);                
 260   2              }
 261   1              LCD_CS_N_ON;
 262   1              LCD_DATA_ON;
 263   1              LCD_WR_N_ON;    
 264   1              delay_35u();
 265   1              
 266   1              //HAL_GPIO_WritePin(GPIOC, TARA_IN_Pin, GPIO_PIN_RESET);
 267   1              
 268   1              //HAL_NVIC_EnableIRQ(TIM14_IRQn);       
 269   1      }
 270          
 271          void LCD_GLASS_DeInit(void){    
 272   1              Display.mode=LCD_DATA;
 273   1      //      Display.addr=0;
 274   1      //      Display.counter=sizeof(Display.LCD_BUF);        
 275   1              
 276   1              memset(Display.LCD_BUF, 0x00, sizeof(Display.LCD_BUF));//InitLCDBuf(0);
 277   1              write_lcd(Display);//Write data to the RAM
 278   1              
 279   1              Display.mode=LCD_COMAND;
 280   1              
 281   1              Display.cmd=LCD_OFF;    
 282   1              write_lcd(Display);//Turn off LCD bias generator        
 283   1              
 284   1              Display.cmd=SYS_DIS;
 285   1              write_lcd(Display);//Turn off system oscillator
 286   1      
 287   1      }
 288          
 289          /*
 290          */
 291          void LCD_GLASS_Clear(void){     
 292   1              Display.mode=LCD_DATA;  
 293   1              memset(Display.LCD_BUF, 0x00, sizeof(Display.LCD_BUF));//InitLCDBuf(0);
 294   1              write_lcd(Display);//Write data to the RAM
 295   1      }
 296          
 297          /*
 298          */
C51 COMPILER V7.50   DVR_LCD_SDI1621                                                       09/22/2022 16:47:30 PAGE 6   

 299          void LCD_GLASS_All_On(void){
 300   1              Display.mode=LCD_DATA;  
 301   1              memset(Display.LCD_BUF, 0xFF, sizeof(Display.LCD_BUF));
 302   1              write_lcd(Display);     
 303   1      }
 304          
 305          
 306          
 307          void LCD_SET_Char(unsigned char cCaracter, unsigned char cPosition_On_LCD, unsigned char cPosition_Text)
 308          {
 309   1      unsigned char i=0;
 310   1                      #if DISPLAY_20400047_EN > 0                     
 311   1                      if(cPosition_On_LCD==LCD_PESO)i=0;
 312   1                      if(cPosition_On_LCD==LCD_PRECIO)i=11;
 313   1                      if(cPosition_On_LCD==LCD_TOTAL) i=5;            
 314   1                      #else
                                if(cPosition_On_LCD==LCD_PESO)i=5;
                                if(cPosition_On_LCD==LCD_PRECIO)i=0;
                                if(cPosition_On_LCD==LCD_TOTAL) i=10;         
                              #endif
 319   1                      i+=(5-cPosition_Text);
 320   1                      Display.LCD_BUF[i]&=0x80;       
 321   1                Display.LCD_BUF[i]|=cCaracter;
 322   1              
 323   1      }
 324          
 325          
 326          void LCD_GLASS_Dot(unsigned char iNumber_Dot, unsigned char cPosition_On_LCD, unsigned char cFLag_On){
 327   1              
 328   1              switch(cPosition_On_LCD){
 329   2                      case LCD_PESO:
 330   2                              if(iNumber_Dot == 3){                         
 331   3                                      if(cFLag_On == 1)
 332   3                                        Display.LCD_BUF[P_PESO_3]|=0x80;
 333   3                          else
 334   3                                        Display.LCD_BUF[P_PESO_3]&=0x7F;
 335   3                              }
 336   2                              if(iNumber_Dot == 2){
 337   3              if(cFLag_On == 1)
 338   3                                        Display.LCD_BUF[P_PESO_2]|=0x80;
 339   3                          else
 340   3                                        Display.LCD_BUF[P_PESO_2]&=0x7F;
 341   3                      
 342   3                              }
 343   2                              if(iNumber_Dot == 1){
 344   3              if(cFLag_On == 1)
 345   3                                        Display.LCD_BUF[P_PESO_1]|=0x80;
 346   3                          else
 347   3                                        Display.LCD_BUF[P_PESO_1]&=0x7F;
 348   3                              }               
 349   2                              break;
 350   2                      case LCD_PRECIO:
 351   2                              #if DISPLAY_20400047_EN > 0     
 352   2                              if(iNumber_Dot == 3){
 353   3                if(cFLag_On == 1)
 354   3                                          Display.LCD_BUF[P_PRECIO_3]|=0x80;
 355   3                            else
 356   3                                          Display.LCD_BUF[P_PRECIO_3]&=0x7F;          
 357   3                                 }
 358   2                              #endif
 359   2                              if(iNumber_Dot == 2){
 360   3              if(cFLag_On == 1)
C51 COMPILER V7.50   DVR_LCD_SDI1621                                                       09/22/2022 16:47:30 PAGE 7   

 361   3                                        Display.LCD_BUF[P_PRECIO_2]|=0x80;
 362   3                          else
 363   3                                        Display.LCD_BUF[P_PRECIO_2]&=0x7F;            
 364   3                              }
 365   2                              if(iNumber_Dot == 1){
 366   3              if(cFLag_On == 1)
 367   3                                        Display.LCD_BUF[P_PRECIO_1]|=0x80;
 368   3                          else
 369   3                                        Display.LCD_BUF[P_PRECIO_1]&=0x7F;
 370   3                              }                       
 371   2                              break;
 372   2                              
 373   2                      case LCD_TOTAL:
 374   2                              if(iNumber_Dot == 2){
 375   3              if(cFLag_On == 1)
 376   3                                        Display.LCD_BUF[P_TOTAL_2]|=0x80;
 377   3                          else
 378   3                                        Display.LCD_BUF[P_TOTAL_2]&=0x7F;             
 379   3                              }
 380   2                              if(iNumber_Dot == 1){
 381   3              if(cFLag_On == 1)
 382   3                                        Display.LCD_BUF[P_TOTAL_1]|=0x80;
 383   3                          else
 384   3                                        Display.LCD_BUF[P_TOTAL_1]&=0x7F;
 385   3                              }
 386   2                      break;
 387   2              }
 388   1              
 389   1              LCD_GLASS_Update();
 390   1      }
 391          
 392          
 393          void LCD_GLASS_Symbols(unsigned char cSymbol, unsigned char cFlag_On){
 394   1              
 395   1              //if(cFlag_On!=0&&cFlag_On!=1)vSend_String_Usart(&huart1,"-------------ERROR------------\r\n");
 396   1      
 397   1              switch(cSymbol){        
 398   2                      #if DISPLAY_20400047_EN > 0     
 399   2                      
 400   2                      case 10:  //vSend_String_Usart(&huart1,"1/4 ");
 401   2                              if(cFlag_On == 1)
 402   2                                      Display.LCD_BUF[S_14]|=0x80;
 403   2                              else
 404   2                                      Display.LCD_BUF[S_14]&=0x7F;    
 405   2                              break;  
 406   2                              case 7: // vSend_String_Usart(&huart1,"2/4 ");
 407   2                                      if(cFlag_On == 1)
 408   2                                      Display.LCD_BUF[S_24]|=0x80;
 409   2                              else
 410   2                                      Display.LCD_BUF[S_24]&=0x7F;    
 411   2                              break;  
 412   2                              case 8:  //vSend_String_Usart(&huart1,"3/4");
 413   2                              if(cFlag_On == 1)
 414   2                                      Display.LCD_BUF[S_34]|=0x80;
 415   2                              else
 416   2                                      Display.LCD_BUF[S_34]&=0x7F;    
 417   2                              break;  
 418   2                              case 9:  //vSend_String_Usart(&huart1,"4/4");
 419   2                              if(cFlag_On == 1)
 420   2                                      Display.LCD_BUF[S_44]|=0x80;
 421   2                              else
 422   2                                      Display.LCD_BUF[S_44]&=0x7F;    
C51 COMPILER V7.50   DVR_LCD_SDI1621                                                       09/22/2022 16:47:30 PAGE 8   

 423   2                              break;  
 424   2                              case SYMBOL_NET:  //vSend_String_Usart(&huart1,"SYMBOL_NET");
 425   2                              if(cFlag_On == 1)
 426   2                                      Display.LCD_BUF[S_TARE]|=0x80;
 427   2                              else
 428   2                                      Display.LCD_BUF[S_TARE]&=0x7F;  
 429   2                              break;  
 430   2                      
 431   2          #else               
                              case SYMBOL_KG:                 //vSend_String_Usart(&huart1,"SYMBOL_KG");
                                      if(cFlag_On == 1)
                                              Display.LCD_BUF[S_KG]|=0x80;
                                      else
                                              Display.LCD_BUF[S_KG]&=0x7F;                    
                                      break;
                              case SYMBOL_LB:                 //vSend_String_Usart(&huart1,"SYMBOL_LB");
                                      if(cFlag_On == 1)
                                              Display.LCD_BUF[S_LB]|=0x80;
                                      else
                                              Display.LCD_BUF[S_LB]&=0x7F;
                                      break;  
                              case SYMBOL_NET:  //vSend_String_Usart(&huart1,"SYMBOL_NET");
                                      if(cFlag_On == 1)
                                              Display.LCD_BUF[S_NET]|=0x80;
                                      else
                                              Display.LCD_BUF[S_NET]&=0x7F;   
                                      break;          
                              #endif
 451   2                      
 452   2                              /*case SYMBOL_TARE:  vSend_String_Usart(&huart1,"SYMBOL_TARE\r\n");
 453   2                              if(cFlag_On == 1)
 454   2                                      Display.LCD_BUF[S_TARE]|=0x80;
 455   2                              else
 456   2                                      Display.LCD_BUF[S_TARE]&=0x7F;  
 457   2                              break;  */
 458   2                              
 459   2                              case SYMBOL_ZERO:  //vSend_String_Usart(&huart1,"SYMBOL_ZERO");
 460   2                              if(cFlag_On == 1)
 461   2                                      Display.LCD_BUF[S_ZERO]|=0x80;
 462   2                              else
 463   2                                      Display.LCD_BUF[S_ZERO]&=0x7F;  
 464   2                              break;          
 465   2                              
 466   2                              
 467   2                              
 468   2                              case SYMBOL_X:  //vSend_String_Usart(&huart1,"SYMBOL_X");
 469   2                              if(cFlag_On == 1)
 470   2                                      Display.LCD_BUF[S_X]|=0x80;
 471   2                              else
 472   2                                      Display.LCD_BUF[S_X]&=0x7F;     
 473   2                              break;  
 474   2                              
 475   2                              case SYMBOL_Y:  //vSend_String_Usart(&huart1,"SYMBOL_Y");
 476   2                              if(cFlag_On == 1)
 477   2                                      Display.LCD_BUF[S_Y]|=0x80;
 478   2                              else
 479   2                                      Display.LCD_BUF[S_Y]&=0x7F;     
 480   2                              break;          
 481   2                      
 482   2                                                              
 483   2                              
 484   2                      case SYMBOL_ALL:  //vSend_String_Usart(&huart1,"SYMBOL_ALL");   
C51 COMPILER V7.50   DVR_LCD_SDI1621                                                       09/22/2022 16:47:30 PAGE 9   

 485   2                              if(cFlag_On==1){
 486   3                                #if DISPLAY_20400047_EN > 0   
 487   3                      Display.LCD_BUF[S_14]|=0x80;
 488   3                      Display.LCD_BUF[S_24]|=0x80;
 489   3                      Display.LCD_BUF[S_34]|=0x80;
 490   3                      Display.LCD_BUF[S_44]|=0x80;    
 491   3                              #else
                              Display.LCD_BUF[S_LB]|=0x80;
                              Display.LCD_BUF[S_KG]|=0x80;            
                              Display.LCD_BUF[S_NET]|=0x80;   
                    #endif                                    
 496   3                      Display.LCD_BUF[S_ZERO]|=0x80;
 497   3                      Display.LCD_BUF[S_Y]|=0x80;
 498   3                      Display.LCD_BUF[S_X]|=0x80;     
 499   3                                      
 500   3                              }
 501   2                              else{
 502   3                                      #if DISPLAY_20400047_EN > 0     
 503   3                      Display.LCD_BUF[S_14]&=0x7F;
 504   3                      Display.LCD_BUF[S_24]&=0x7F;
 505   3                      Display.LCD_BUF[S_34]&=0x7F;
 506   3                      Display.LCD_BUF[S_44]&=0x7F;    
 507   3                              #else           
                        Display.LCD_BUF[S_LB]&=0x7F;
                              Display.LCD_BUF[S_KG]&=0x7F;            
                              Display.LCD_BUF[S_NET]&=0x7F;   
                    #endif                                    
 512   3                      Display.LCD_BUF[S_ZERO]&=0x7F;
 513   3                      Display.LCD_BUF[S_Y]&=0x7F;
 514   3                      Display.LCD_BUF[S_X]&=0x7F;     
 515   3                              }
 516   2                              
 517   2                                      
 518   2                      break;
 519   2      
 520   2              }
 521   1              
 522   1      /*      if(cSymbol==SYMBOL_TARE){
 523   1              if(cFlag_On == 1)
 524   1                              vSend_String_Usart(&huart1,"  on\r\n ");
 525   1                              else
 526   1                              vSend_String_Usart(&huart1,"  off\r\n ");
 527   1                      }*/
 528   1              
 529   1              Display.mode=LCD_DATA;
 530   1      //      Display.addr=0;
 531   1      //      Display.counter=sizeof(Display.LCD_BUF);        
 532   1              LCD_GLASS_Update();
 533   1      }
 534          
 535          /**
 536                  ******************************************************************************
 537            * Objetivo: Mostrar en LCD numero con formato float.
 538            * Parametros entrada: Numero, numero de decimales, posicion en la LCD, e
 539                  *               indicacion de punto flotante.
 540                  * Parametros Salida: Ninguno.
 541            * Prerequisitos: 
 542            ***
 543          */
 544          
 545          
 546          void LCD_GLASS_Float(float fNumber_To_LCD, unsigned char iNumber_Decimal, unsigned char cPosition_On_LCD) 
C51 COMPILER V7.50   DVR_LCD_SDI1621                                                       09/22/2022 16:47:30 PAGE 10  

             -{
 547   1      unsigned char xdata strText_LCD[8];  
 548   1      
 549   1        if (iNumber_Decimal == 0) {
 550   2          if (cPosition_On_LCD == LCD_TOTAL) {
 551   3            sprintf(strText_LCD, "%6.0f", fNumber_To_LCD);//ok
 552   3          } else 
 553   2            sprintf(strText_LCD, "%5.0f", fNumber_To_LCD);//ok
 554   2          
 555   2        }
 556   1        if (iNumber_Decimal == 1) {
 557   2          if (cPosition_On_LCD == LCD_TOTAL) {
 558   3            //sprintf(strText_LCD, "%7.1f", fNumber_To_LCD);//no ok
 559   3            sprintf(strText_LCD, "FLOAT");//no ok
 560   3          } else 
 561   2            sprintf(strText_LCD, "%6.1f", fNumber_To_LCD);//ok
 562   2          
 563   2        }
 564   1        if (iNumber_Decimal == 2) {
 565   2          if (cPosition_On_LCD == LCD_TOTAL) {
 566   3            sprintf(strText_LCD, "%7.2f", fNumber_To_LCD);//ok
 567   3          } else 
 568   2            sprintf(strText_LCD, "%6.2f", fNumber_To_LCD);//ok
 569   2          
 570   2        }
 571   1        if (iNumber_Decimal == 3) {
 572   2          if (cPosition_On_LCD == LCD_TOTAL) {
 573   3            sprintf(strText_LCD, "%7.3f", fNumber_To_LCD);//ok
 574   3          } else 
 575   2            sprintf(strText_LCD, "%6.3f", fNumber_To_LCD);//ok
 576   2          
 577   2        }
 578   1      
 579   1        //IWDG_KEY_REFRESH; 
 580   1        LCD_GLASS_String(strText_LCD, cPosition_On_LCD);
 581   1      }
 582          
 583          
 584          /**
 585                  ******************************************************************************
 586            * Objetivo: Mostrar en LCD texto.
 587            * Parametros entrada: Texo y posicion en la LCD.
 588                  * Parametros Salida: Ninguno.
 589            * Prerequisitos: 
 590            ***
 591          */
 592          
 593          void LCD_GLASS_String(unsigned char *pCaracter, unsigned char cPosition_On_LCD){
 594   1          unsigned char xdata iIndex_Text = 5;
 595   1              unsigned char xdata iPosicion_Decimal = 0;
 596   1              //char txt[30];
 597   1              /*vSend_String_USB("\r\n");     
 598   1              if(cPosition_On_LCD==LCD_TOTAL)   vSend_String_USB("LCD_TOTAL=  ");
 599   1              if(cPosition_On_LCD==LCD_PRECIO)        vSend_String_USB("LCD_PRECIO= ");
 600   1              if(cPosition_On_LCD==LCD_PESO)    vSend_String_USB("LCD_PESO=   ");     
 601   1              vSend_String_USB(pCaracter);vSend_String_USB("\r\n");   */
 602   1              
 603   1              /*if(cPosition_On_LCD==LCD_TOTAL)         vSend_String_Usart(&huart1,"LCD_TOTAL=  ");
 604   1              if(cPosition_On_LCD==LCD_PRECIO)        vSend_String_Usart(&huart1,"LCD_PRECIO= ");
 605   1              if(cPosition_On_LCD==LCD_PESO)    vSend_String_Usart(&huart1,"LCD_PESO=   ");   
 606   1              vSend_String_Usart(&huart1,pCaracter);vSend_String_Usart(&huart1,"\r\n");       
 607   1              */
C51 COMPILER V7.50   DVR_LCD_SDI1621                                                       09/22/2022 16:47:30 PAGE 11  

 608   1      
 609   1              if(cPosition_On_LCD==LCD_TOTAL) {Display.LCD_BUF[P_TOTAL_2]&=0x7F;Display.LCD_BUF[P_TOTAL_1]&=0x7F;}
 610   1        if(cPosition_On_LCD==LCD_PRECIO){
 611   2              #if DISPLAY_20400047_EN > 0     
 612   2                              Display.LCD_BUF[P_PRECIO_3]&=0x7F;
 613   2              #endif
 614   2              Display.LCD_BUF[P_PRECIO_2]&=0x7F;Display.LCD_BUF[P_PRECIO_1]&=0x7F;}
 615   1              if(cPosition_On_LCD==LCD_PESO)  {Display.LCD_BUF[P_PESO_3]&=0x7F;Display.LCD_BUF[P_PESO_2]&=0x7F;Display.L
             -CD_BUF[P_PESO_1]&=0x7F;}              
 616   1      
 617   1              while(*(pCaracter) != 0){
 618   2                      
 619   2                      if(*(pCaracter) >= '0' && *(pCaracter) <= '9'){                 
 620   3                              LCD_SET_Char(cNumber_LCD[*(pCaracter)-'0'], cPosition_On_LCD, iIndex_Text--);                   
 621   3                      }
 622   2                      
 623   2                      if(*(pCaracter) == '-'){
 624   3                              LCD_SET_Char(cABC_LCD[26], cPosition_On_LCD, iIndex_Text--);                    
 625   3                      }
 626   2                      
 627   2                      if(*(pCaracter) == ' '){
 628   3                              LCD_SET_Char(0x0, cPosition_On_LCD, iIndex_Text);
 629   3                              iIndex_Text--;                  
 630   3                      }
 631   2                      
 632   2                      if(*(pCaracter) >= 'A' && *(pCaracter) <= 'Z'){
 633   3                              LCD_SET_Char(cABC_LCD[*(pCaracter)-'A'], cPosition_On_LCD, iIndex_Text);
 634   3                              iIndex_Text--;                  
 635   3                      }
 636   2                      
 637   2                      if(*(pCaracter) == '.'){
 638   3                              
 639   3                              //sprintf(txt,"PosDec= %d \r\n\r\n",iPosicion_Decimal);                         
 640   3                                      //vSend_String_Usart(&huart1,txt);              
 641   3                                      
 642   3                              if(cPosition_On_LCD == LCD_PRECIO){     
 643   4               #if DISPLAY_20400047_EN > 0    
 644   4                                      if(iPosicion_Decimal == 2)
 645   4                                              Display.LCD_BUF[P_PRECIO_3]|=0x80;      
 646   4                     #endif                           
 647   4                                      if(iPosicion_Decimal == 3)
 648   4                                              Display.LCD_BUF[P_PRECIO_2]|=0x80;                              
 649   4                                      if(iPosicion_Decimal == 4)
 650   4                                              Display.LCD_BUF[P_PRECIO_1]|=0x80;                                                      
 651   4                              }
 652   3                              if(cPosition_On_LCD == LCD_PESO){                               
 653   4                                      if(iPosicion_Decimal == 2)
 654   4                                              Display.LCD_BUF[P_PESO_3]|=0x80;
 655   4                                      if(iPosicion_Decimal == 3)
 656   4                                              Display.LCD_BUF[P_PESO_2]|=0x80;
 657   4                                      if(iPosicion_Decimal == 4)
 658   4                                              Display.LCD_BUF[P_PESO_1]|=0x80;                                                        
 659   4                              }
 660   3                              if(cPosition_On_LCD == LCD_TOTAL){
 661   4                               #if DISPLAY_20400047_EN > 0    
 662   4                                      if(iPosicion_Decimal == 4)                                      
 663   4                                              Display.LCD_BUF[P_TOTAL_1]|=0x80;//sprintf(txt,"LCD_BUF[9]= d%d",Display.LCD_BUF[9]);                           
 664   4                                      if(iPosicion_Decimal == 3)
 665   4                                              Display.LCD_BUF[P_TOTAL_2]|=0x80;//vSend_String_Usart(&huart1,"CC ");
 666   4                               #else
                                              if(iPosicion_Decimal == 4)                                      
                                                      Display.LCD_BUF[P_TOTAL_2]|=0x80;//sprintf(txt,"LCD_BUF[9]= d%d",Display.LCD_BUF[9]);                           
C51 COMPILER V7.50   DVR_LCD_SDI1621                                                       09/22/2022 16:47:30 PAGE 12  

                                              if(iPosicion_Decimal == 5)
                                                      Display.LCD_BUF[P_TOTAL_1]|=0x80;//vSend_String_Usart(&huart1,"CC ");                           
                                       #endif
 672   4                              }                                               
 673   3                      }
 674   2                      iPosicion_Decimal++;
 675   2                      pCaracter++;
 676   2              }
 677   1              
 678   1              Display.mode=LCD_DATA;
 679   1      //      Display.addr=0;
 680   1      //      Display.counter=sizeof(Display.LCD_BUF);        
 681   1              LCD_GLASS_Update();
 682   1      }
 683          
 684          void LCD_GLASS_Update(void){
 685   1              //char txt[10];int i;
 686   1              Display.mode=LCD_DATA;  
 687   1              /*for(i=0;i<16;i++){
 688   1                sprintf(txt, "%02x, ", Display.LCD_BUF[i]);
 689   1                      vSend_String_Usart(&huart1,txt);                                
 690   1              }
 691   1              vSend_String_Usart(&huart1," \r\n");    
 692   1              vSend_String_Usart(&huart1," \r\n");    */
 693   1              
 694   1              write_lcd(Display);//Write data to the RAM                      
 695   1      }
 696          /*
 697          
 698                a7 a6 a5 a4 a3 a2 a1 a0
 699          20400021
 700                   / /////A4/////
 701                   /              /
 702                  A0             A5
 703                  /               /
 704                  /               /
 705                    /////A1//////
 706                  /               /
 707                  /               /
 708                  A2             A6
 709                  /               /
 710                  /               /
 711                   /////A3///////
 712                                           
 713                                           DISPLAY PC-HS
 714                   / /////A0/////
 715                   /              /
 716                  A1             A4
 717                  /               /
 718                  /               /
 719                    /////A5//////
 720                  /               /
 721                  /               /
 722                  A2             A6
 723                  /               /
 724                  /               /
 725                   /////A3///////
 726                                           
 727          */
 728          


C51 COMPILER V7.50   DVR_LCD_SDI1621                                                       09/22/2022 16:47:30 PAGE 13  

MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1648    ----
   CONSTANT SIZE    =     48    ----
   XDATA SIZE       =     56      37
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
