C51 COMPILER V7.50   MAIN                                                                  09/13/2022 19:32:53 PAGE 1   


C51 COMPILER V7.50, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN main.obj
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE customer\main.c LARGE BROWSE DEBUG OBJECTEXTEND PRINT(.\main.lst) OBJECT(ma
                    -in.obj)

line level    source

   1          //#pragma code symbols debug oe
   2          //#define EXTERN
   3          #include <REG52.H>
   4          //#include <math.h>
   5          #include "./_solidic/head_file_version.h"
   6          #include "./_display/dvr_lcd_SDI1621.h"
*** WARNING C245 IN LINE 40 OF C:\KEIL\C51\INC\STDIO.H: unknown #pragma, line ignored
*** WARNING C245 IN LINE 52 OF C:\KEIL\C51\INC\STRING.H: unknown #pragma, line ignored
   7          #include "./_weight/dvr_HX712.h"
   8          
   9          
  10          unsigned char Key;
  11          unsigned char lecturaADC[4]= {0};
  12          static unsigned char cont = 0;
  13          
  14          #define     BL_EN       P1 |= 0x20
  15          #define     BL_DIS      P1 &= 0xDF
  16          
  17          #define     BEEPER_EN   P1 |= 0x10
  18          #define     BEEPER_DIS  P1 &= 0xEF
  19          
  20          unsigned int convertidorADC(void);
  21          
  22          void init_pwm(void){
  23   1          PWMF_H  = 0x00;
  24   1              PWMF_L  = 0x20;
  25   1              PWM0    = 05;
  26   1              PWM1    = 03;
  27   1              PWMCON  = 0x04; //PWM0-P1.4(LCD_LAMP)????(?PWM0=0xff?,?????)
  28   1      }
  29          
  30          void main(void)
  31          {char txt[5]={0};
  32   1       float peso=0, voltaje=0;
  33   1              //int a = 0, b = 0;
  34   1          P0M0 = 0xF0; //0b11111111;
  35   1          P0M1 = 0x00; //0b00000000;    
  36   1          P1M0 = 0xBF; //0b10111111;
  37   1          P1M1 = 0x00; //0b00000000;        
  38   1          P2M0 = 0xEE; //0b11101110;
  39   1          P2M1 = 0x00; //0b00000000;
  40   1              //Config lectura adc
  41   1              P0M0 &= ~(1<<5);
  42   1              P0M1 |= (1<<5);
  43   1              //Configuracion salida BL
  44   1          P1M0 |= (1<<5);
  45   1          P1M1 &= ~(1<<5);
  46   1              //Configuracion salida BL
  47   1          P0M0 |= (1<<1);
  48   1          P0M1 &= ~(1<<1);
  49   1      /*bit KEY_K0 = P0^2;    
  50   1      sbit KEY_K1 = P2^4;     
  51   1      sbit KEY_K2 = P2^0;     
  52   1      sbit KEY_K3 = P1^6;             */
C51 COMPILER V7.50   MAIN                                                                  09/13/2022 19:32:53 PAGE 2   

  53   1      
  54   1      /*      P1M0 = 0xff;
  55   1              P1M1 = 0x00;
  56   1              P2M0 = 0xff;
  57   1              P2M1 = 0x00;*/
  58   1      
  59   1          P0 = 0x0C;//P0 = 0x04;
  60   1          P1 = 0x40;
  61   1          P2 = 0x11;
  62   1              //Salida en 1  para lectura adc
  63   1              P0|= (1<<5);
  64   1              
  65   1              //Interrupcion timer0
  66   1              IE = 0x82;
  67   1              IP = 0x02;
  68   1              
  69   1              //timer0
  70   1              TMOD = 0x00;
  71   1              TL0 = 0x00;
  72   1              TH0 = 0x7F;
  73   1              CKCON = 0x04;
  74   1      
  75   1      /*      P2 = 0x00;
  76   1              P1 = 0x00;*/
  77   1      
  78   1              iLCD_GLASS_Init();
  79   1                              delay_ms(500);
  80   1              LCD_GLASS_String("TORR",LCD_PESO);
  81   1                      delay_ms(500);
  82   1              LCD_GLASS_String("EY",LCD_PRECIO);
  83   1                              delay_ms(500);    
  84   1       
  85   1              init_pwm();
  86   1              BL_DIS;
  87   1              BEEPER_EN;
  88   1              
  89   1      
  90   1      /*      while(1)
  91   1              {
  92   1              KEY_D0=1;
  93   1      KEY_D1=1;
  94   1      KEY_D2=1;
  95   1      KEY_D3=1;
  96   1      KEY_D4=1;
  97   1      delay_ms(100);
  98   1      
  99   1      KEY_D0=0;
 100   1      KEY_D1=0;
 101   1      KEY_D2=0;
 102   1      KEY_D3=0;
 103   1      KEY_D4=0;
 104   1      delay_ms(100);
 105   1      
 106   1              }*/
 107   1       TCON |= (1<<4);
 108   1       iLCD_GLASS_Clear();
 109   1       while(1){   
 110   2       /*key_scan();
 111   2              sprintf(txt,"%d  ",(int)(Key));
 112   2              LCD_GLASS_String(txt,LCD_TOTAL)*/
 113   2      
 114   2              //sprintf(txt,"%d  ",(int)(KeyState));
C51 COMPILER V7.50   MAIN                                                                  09/13/2022 19:32:53 PAGE 3   

 115   2              //LCD_GLASS_String(txt,LCD_PRECIO);
 116   2      
 117   2              
 118   2              delay_ms(50);
 119   2      
 120   2              peso=fRead_Adc(0);
 121   2              sprintf(txt,"%f   ",peso);  LCD_GLASS_String(txt,LCD_PESO); 
 122   2      
 123   2              P0|= (1<<5);
 124   2              voltaje=convertidorADC()*(3.3/255);
 125   2      //      LCD_GLASS_Float(peso, 2,  LCD_TOTAL);
 126   2      //      LCD_GLASS_Float(voltaje, 2, LCD_PESO);
 127   2      
 128   2      }
 129   1      
 130   1      }
 131          
 132          unsigned int convertidorADC(){
 133   1      
 134   1      unsigned int v=0;
 135   1      SARCON = 0x09;
 136   1              if(!(SARCON & 0x04))
 137   1              {
 138   2                      SARCON |= 0x04;
 139   2                      while(SARCON & 0x04)
 140   2                      {
 141   3                      }
 142   2              }
 143   1      v=SARDATA;
 144   1      SARCON &= 0xf7;
 145   1      return v;
 146   1      
 147   1      }
 148          
 149          static void timer0(void) interrupt 1
 150          {               
 151   1              //static unsigned char cont = 0;
 152   1              //IE = 0;        // 禁止中断
 153   1              //P1 &= ~(1<<5);
 154   1              /*if(cont==40){
 155   1                      P1 |= (1<<5);
 156   1                      cont = 0;
 157   1                      }*/
 158   1              P0 ^= (1<<1);//P1 ^= (1<<5);
 159   1              TL0 = 0xCF;
 160   1              TH0 = 0xAF;
 161   1              /*if(cont){
 162   1                      cont = 0;
 163   1                      P1 &= ~(1<<5);
 164   1              }else{
 165   1                      cont = 1;
 166   1                      P1 |= (1<<5);
 167   1                      }*/
 168   1              //TCON |= (1<<4);
 169   1              //IE = 0x02;  // 打开中断
 170   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    320    ----
   CONSTANT SIZE    =     19    ----
   XDATA SIZE       =      6      13
C51 COMPILER V7.50   MAIN                                                                  09/13/2022 19:32:53 PAGE 4   

   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  2 WARNING(S),  0 ERROR(S)
