C51 COMPILER V7.50   MAIN                                                                  09/27/2022 18:27:49 PAGE 1   


C51 COMPILER V7.50, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN main.obj
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE customer\main.c BROWSE DEBUG OBJECTEXTEND PRINT(.\main.lst) OBJECT(main.obj
                    -)

line level    source

   1          //#pragma code symbols debug oe
   2          //#define EXTERN
   3          #include "./_display/dvr_lcd_SDI1621.h"
   4          #include <REG52.H>
   5          //#include <math.h>
   6          #include "./_solidic/head_file_version.h"
   7          #include "./_weight/dvr_HX712.h"
   8          #include "./customer/keyboard.h"
   9          
  10          #include "./_scale/dvr_def.h"
  11          #include "./_scale/dvr_scale.h"
  12          #include <stdio.h>
  13          
  14          extern float xdata fWeightScale;        
  15          
  16          unsigned int convertidorADC(void);
  17          void TestEEPROM(void);
  18          void init_pwm(void);
  19          void wdt_init(void);
  20          void gpio_init(void);
  21          void adc_init(void);
  22          void init_int_timer0(void);
  23          
  24          void main(void)
  25          {
  26   1      LCD_GLASS_Init(); 
  27   1      //char txt[20];float num = 1.3;//12.3;
  28   1        wdt_init();  /// watch dog ///
  29   1        gpio_init();  
  30   1        adc_init();  
  31   1        init_pwm();
  32   1        // Configuracion salida pin P0.1 prueba de togle pin interrup timer0. Salida
  33   1        // para toogle prueba   // P0M0 |= (1<<1);  // P0M1 &= ~(1<<1);
  34   1        init_int_timer0();    
  35   1        LCD_GLASS_Init(); 
  36   1        delay_ms(500);
  37   1      
  38   1      
  39   1          vReadParamScale();
*** WARNING C206 IN LINE 39 OF CUSTOMER\MAIN.C: 'vReadParamScale': missing function-prototype
  40   1      LCD_GLASS_Float(stScaleParam.iCapacity,2,LCD_TOTAL);
  41   1      delay_ms(2000);
  42   1              if(stScaleParam.iCapacity != 30)
  43   1              vPreConfiguration(PreConfig30KG);
  44   1              if(stScaleParam.fFactorCalibrate<1)
  45   1               vCalibrate_Scale();
*** WARNING C206 IN LINE 45 OF CUSTOMER\MAIN.C: 'vCalibrate_Scale': missing function-prototype
  46   1      //TestEEPROM();
  47   1      
  48   1      
  49   1      LCD_GLASS_Clear();
  50   1       while(1){  ; 
  51   2          key_scan();
  52   2      //      nFloatToStr(num,2,txt);
C51 COMPILER V7.50   MAIN                                                                  09/27/2022 18:27:49 PAGE 2   

  53   2      //      
  54   2              vCalculate_Weight();delay_ms(50);
*** WARNING C206 IN LINE 54 OF CUSTOMER\MAIN.C: 'vCalculate_Weight': missing function-prototype
  55   2              LCD_GLASS_Float(fWeightScale, 2,  LCD_PESO);
  56   2      //      sprintf(txt,"%d ",(int)(Key));
  57   2      //      LCD_GLASS_String(txt,LCD_PESO);
  58   2      
  59   2      //      sprintf(txt,"%d  ",(int)(KeyState));
  60   2      //      LCD_GLASS_String(txt,LCD_PRECIO);
  61   2      
  62   2              
  63   2              
  64   2         
  65   2              //peso=fRead_Adc(0);
  66   2      
  67   2      
  68   2              
  69   2          
  70   2      //      P0|= (1<<5);
  71   2      //      voltaje=convertidorADC()*(3.3/255);
  72   2       //     
  73   2      //      LCD_GLASS_Float(voltaje, 2, LCD_PESO);
  74   2      
  75   2      
  76   2          
  77   2        //iTemp_RA=123456789; 
  78   2              
  79   2      //      ReadHX712(&iTemp_RA); 
  80   2        //  sprintf(txt,"%ld   ",iTemp_RA);  LCD_GLASS_String(txt,LCD_TOTAL); 
  81   2      
  82   2       //delay_ms(3000); 
  83   2      //
  84   2      
  85   2      //peso = fStablePoint(5, 1, 0); //ok
  86   2      //LCD_GLASS_Float(peso,0,LCD_TOTAL);//ok
  87   2      }
  88   1      
  89   1      }
  90          
  91          void init_pwm(void){
  92   1      //apagar bl y beeper
  93   1              BL_DIS;
  94   1              BEEPER_DIS;
  95   1      
  96   1         //Configuracion salida BL
  97   1          P1M0 |= (1<<5);
  98   1          P1M1 &= ~(1<<5);
  99   1      
 100   1          PWMF_H  = 0x00;
 101   1              PWMF_L  = 0xA0;
 102   1              PWM0    = 0X01;//BEEPER correcto 0x6c
 103   1              PWM1    = 0X50;
 104   1              PWMCON  = 0x04; //PWM0-P1.4(LCD_LAMP)????(?PWM0=0xff?,?????)
 105   1      
 106   1              
 107   1      }
 108          
 109          void wdt_init(void){// watch dog ///
 110   1          EA = 0;
 111   1          WD_TA = 0x05;
 112   1              WD_TA = 0x0a;
 113   1              WDCON = 0x1f; /// 4s?,0.2s ///
C51 COMPILER V7.50   MAIN                                                                  09/27/2022 18:27:49 PAGE 3   

 114   1          EA = 1;
 115   1              IWDG_KEY_REFRESH;
 116   1      }
 117          
 118          void gpio_init(void)
 119          {
 120   1          P0 = 0x0C;//P0 = 0x04;
 121   1          P1 = 0x40;
 122   1          P2 = 0x11;
 123   1      
 124   1          P0M0 = 0xF0; //0b11111111;
 125   1          P0M1 = 0x00; //0b00000000;    
 126   1          P1M0 = 0xBF; //0b10111111;
 127   1          P1M1 = 0x00; //0b00000000;        
 128   1          P2M0 = 0xEE; //0b11101110;
 129   1          P2M1 = 0x00; //0b00000000;
 130   1      }
 131          
 132          void adc_init(void)
 133          {
 134   1          //Config lectura adc Only input
 135   1              P0M0 &= ~(1<<5);
 136   1              P0M1 |= (1<<5);
 137   1              //Salida en 1  para lectura adc
 138   1              P0|= (1<<5);
 139   1      }
 140          
 141          void init_int_timer0(void)
 142          {
 143   1              //Interrupcion timer0
 144   1              IE = 0x82;
 145   1              IP = 0x02;      
 146   1              //timer0
 147   1              TMOD = 0x00;
 148   1              TL0 = 0x00;
 149   1              TH0 = 0x7F;
 150   1              CKCON = 0x04;
 151   1      
 152   1          TCON |= (1<<4);//Start timer0
 153   1      }
 154          
 155          unsigned int convertidorADC(){
 156   1      
 157   1      unsigned int xdata v=0;
 158   1      SARCON = 0x09;
 159   1              if(!(SARCON & 0x04))
 160   1              {
 161   2                      SARCON |= 0x04;
 162   2                      while(SARCON & 0x04)
 163   2                      {
 164   3                      }
 165   2              }
 166   1      v=SARDATA;
 167   1      SARCON &= 0xf7;
 168   1      return v;
 169   1      
 170   1      }
 171          /////////   Interrups timer0    ////////////////
 172          
 173          static void timer0(void) interrupt 1
 174          {               
 175   1              
C51 COMPILER V7.50   MAIN                                                                  09/27/2022 18:27:49 PAGE 4   

 176   1                      /* 200mS*/
 177   1      /*      if(strTimer.cFLag_TimerA_Start){
 178   1                      strTimer.iTimerA = 200;//200;//700; //891
 179   1                      //strTimer.cFLag_TimerA_Start = 0;
 180   1                      strTimer.cFLag_TimerA_On = 1;
 181   1                      strTimer.cFLag_TimerA_End = 0;
 182   1              }*/
 183   1      
 184   1              /* 5S*/
 185   1      /*      if(strTimer.cFLag_TimerE_Start){
 186   1                      strTimer.iTimerE = Number_Count_Sec * 4;
 187   1                      strTimer.cFLag_TimerE_Start = 0;
 188   1                      strTimer.cFLag_TimerE_On = 1;
 189   1                      strTimer.cFLag_TimerE_End = 0;
 190   1              }
 191   1      */
 192   1      
 193   1              /*Accion de desbordamiento del timer */
 194   1      /*      if(strTimer.cFLag_TimerA_On){
 195   1                      
 196   1      
 197   1                      if(strTimer.cFLag_TimerA_Start == 1){
 198   1                              strTimer.cFLag_TimerA_Start = 0;
 199   1                              BEEPER_EN;
 200   1                      }
 201   1                      if(strTimer.iTimerA > 0){
 202   1                              strTimer.iTimerA--;
 203   1                      }else{
 204   1                              strTimer.cFLag_TimerA_On = 0;
 205   1                              strTimer.cFLag_TimerA_End = 1;
 206   1                              BEEPER_DIS;
 207   1                              //GPIO_ResetBits(GPIOA, BEEPER);
 208   1                      }
 209   1              }*/
 210   1      
 211   1              if(strTimer.iTimerA>0&&strTimer.iTimerA<TimerAend)
 212   1              {
 213   2              if(strTimer.iTimerA==1)BEEPER_EN;
 214   2                
 215   2                  strTimer.iTimerA++;
 216   2                      if(strTimer.iTimerA==TimerAend)BEEPER_DIS;
 217   2              }
 218   1      
 219   1              /* timer usado en calibracion */
 220   1      /*      if(strTimer.cFLag_TimerE_On){
 221   1                      if(strTimer.iTimerE > 0){
 222   1                              strTimer.iTimerE--;
 223   1                      }else{
 224   1                              strTimer.cFLag_TimerE_On = 0;
 225   1                              strTimer.cFLag_TimerE_End = 1;
 226   1                      }
 227   1              }*/
 228   1              if(strTimer.iTimerE>0 && strTimer.iTimerE<TimerEend)
 229   1              strTimer.iTimerE++;
 230   1      
 231   1              //P0 ^= (1<<1);//P1 ^= (1<<5);
 232   1              TL0 = 0xCF;
 233   1              TH0 = 0xb5;
 234   1              TCON |= (1<<4);
 235   1      
 236   1      }
 237          
C51 COMPILER V7.50   MAIN                                                                  09/27/2022 18:27:49 PAGE 5   

 238          
 239          void TestEEPROM(void)
 240          {
 241   1              unsigned int xdata addr=ADDRESS_PLU;
 242   1              float xdata val;
 243   1              float xdata i=0.12;
 244   1      
 245   1              unsigned int xdata  x=0;
 246   1       
 247   1              NRM_securty_a = 0xaa;
 248   1              NRM_securty_b = 0x55;
 249   1              
 250   1      
 251   1      
 252   1              while(i<15){    
 253   2              for(x=1;x<11;x++){
 254   3              flash_write_float32(addr+(x*4),i);
 255   3      
 256   3              val = flash_read_float32(addr+(x*4)-4);
 257   3              LCD_GLASS_Float(val, 2,  LCD_PESO);
 258   3      
 259   3              val = flash_read_float32(addr+(x*4));
 260   3              LCD_GLASS_Float(val, 2,  LCD_TOTAL);
 261   3      
 262   3              val = flash_read_float32(addr+(x*4)+4);
 263   3              LCD_GLASS_Float(val, 2,  LCD_PRECIO);
 264   3      
 265   3              i++;
 266   3              delay_ms(1000);
 267   3              }
 268   2      }
 269   1      
 270   1      NRM_securty_a = 0x00;
 271   1              NRM_securty_b = 0x00;
 272   1              LCD_GLASS_Clear();
 273   1      }
 274          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    839    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----      14
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  3 WARNING(S),  0 ERROR(S)
