C51 COMPILER V7.50   MAIN                                                                  09/19/2022 12:19:57 PAGE 1   


C51 COMPILER V7.50, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN main.obj
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE customer\main.c LARGE BROWSE DEBUG OBJECTEXTEND PRINT(.\main.lst) OBJECT(ma
                    -in.obj)

line level    source

   1          //#pragma code symbols debug oe
   2          //#define EXTERN
   3          #include <REG52.H>
   4          //#include <math.h>
   5          #include "./_solidic/head_file_version.h"
   6          #include "./_display/dvr_lcd_SDI1621.h"
*** WARNING C245 IN LINE 40 OF C:\KEIL\C51\INC\STDIO.H: unknown #pragma, line ignored
*** WARNING C245 IN LINE 52 OF C:\KEIL\C51\INC\STRING.H: unknown #pragma, line ignored
   7          #include "./_weight/dvr_HX712.h"
   8          
   9          unsigned char Key;
  10          unsigned char lecturaADC[4]= {0};
  11          static unsigned char cont = 0;
  12          
  13          #define     BL_EN       P1 |= 0x20
  14          #define     BL_DIS      P1 &= 0xDF
  15          
  16          #define     BEEPER_EN   P1 |= 0x10
  17          #define     BEEPER_DIS  P1 &= 0xEF
  18          
  19          unsigned int convertidorADC(void);
  20          void TestEEPROM(void);
  21          
  22          void init_pwm(void){
  23   1          PWMF_H  = 0x00;
  24   1              PWMF_L  = 0x20;
  25   1              PWM0    = 05;
  26   1              PWM1    = 03;
  27   1              PWMCON  = 0x04; //PWM0-P1.4(LCD_LAMP)????(?PWM0=0xff?,?????)
  28   1      }
  29          
  30          
  31          float peso=0, voltaje=0;
  32          void main(void)
  33          {char txt[5]={0};
  34   1       
  35   1              //int a = 0, b = 0;
  36   1          P0M0 = 0xF0; //0b11111111;
  37   1          P0M1 = 0x00; //0b00000000;    
  38   1          P1M0 = 0xBF; //0b10111111;
  39   1          P1M1 = 0x00; //0b00000000;        
  40   1          P2M0 = 0xEE; //0b11101110;
  41   1          P2M1 = 0x00; //0b00000000;
  42   1              //Config lectura adc
  43   1              P0M0 &= ~(1<<5);
  44   1              P0M1 |= (1<<5);
  45   1              //Configuracion salida BL
  46   1          P1M0 |= (1<<5);
  47   1          P1M1 &= ~(1<<5);
  48   1              //Configuracion salida BL
  49   1          P0M0 |= (1<<1);
  50   1          P0M1 &= ~(1<<1);
  51   1      /*bit KEY_K0 = P0^2;    
  52   1      sbit KEY_K1 = P2^4;     
C51 COMPILER V7.50   MAIN                                                                  09/19/2022 12:19:57 PAGE 2   

  53   1      sbit KEY_K2 = P2^0;     
  54   1      sbit KEY_K3 = P1^6;             */
  55   1      
  56   1      /*      P1M0 = 0xff;
  57   1              P1M1 = 0x00;
  58   1              P2M0 = 0xff;
  59   1              P2M1 = 0x00;*/
  60   1      
  61   1          P0 = 0x0C;//P0 = 0x04;
  62   1          P1 = 0x40;
  63   1          P2 = 0x11;
  64   1              //Salida en 1  para lectura adc
  65   1              P0|= (1<<5);
  66   1              
  67   1              //Interrupcion timer0
  68   1              IE = 0x82;
  69   1              IP = 0x02;
  70   1              
  71   1              //timer0
  72   1              TMOD = 0x00;
  73   1              TL0 = 0x00;
  74   1              TH0 = 0x7F;
  75   1              CKCON = 0x04;
  76   1      
  77   1      /*      P2 = 0x00;
  78   1              P1 = 0x00;*/
  79   1      
  80   1              iLCD_GLASS_Init();
  81   1                              delay_ms(500);
  82   1              LCD_GLASS_String("TORR",LCD_PESO);
  83   1                      delay_ms(500);
  84   1              LCD_GLASS_String("EY",LCD_PRECIO);
  85   1                              delay_ms(500);    
  86   1       
  87   1              init_pwm();
  88   1              BL_DIS;
  89   1              BEEPER_EN;
  90   1              
  91   1      
  92   1      /*      while(1)
  93   1              {
  94   1              KEY_D0=1;
  95   1      KEY_D1=1;
  96   1      KEY_D2=1;
  97   1      KEY_D3=1;
  98   1      KEY_D4=1;
  99   1      delay_ms(100);
 100   1      
 101   1      KEY_D0=0;
 102   1      KEY_D1=0;
 103   1      KEY_D2=0;
 104   1      KEY_D3=0;
 105   1      KEY_D4=0;
 106   1      delay_ms(100);
 107   1      
 108   1              }*/
 109   1       TCON |= (1<<4);
 110   1       iLCD_GLASS_Clear();
 111   1       while(1){   
 112   2       /*key_scan();
 113   2              sprintf(txt,"%d  ",(int)(Key));
 114   2              LCD_GLASS_String(txt,LCD_TOTAL)*/
C51 COMPILER V7.50   MAIN                                                                  09/19/2022 12:19:57 PAGE 3   

 115   2      
 116   2              //sprintf(txt,"%d  ",(int)(KeyState));
 117   2              //LCD_GLASS_String(txt,LCD_PRECIO);
 118   2      
 119   2              
 120   2              delay_ms(50);
 121   2         
 122   2              peso=fRead_Adc(0);
 123   2              sprintf(txt,"%f   ",peso);  LCD_GLASS_String(txt,LCD_PESO); 
 124   2      
 125   2              P0|= (1<<5);
 126   2              voltaje=convertidorADC()*(3.3/255);
 127   2      //      LCD_GLASS_Float(peso, 2,  LCD_TOTAL);
 128   2      //      LCD_GLASS_Float(voltaje, 2, LCD_PESO);
 129   2      TestEEPROM();
 130   2      }
 131   1      
 132   1      }
 133          
 134          unsigned int convertidorADC(){
 135   1      
 136   1      unsigned int v=0;
 137   1      SARCON = 0x09;
 138   1              if(!(SARCON & 0x04))
 139   1              {
 140   2                      SARCON |= 0x04;
 141   2                      while(SARCON & 0x04)
 142   2                      {
 143   3                      }
 144   2              }
 145   1      v=SARDATA;
 146   1      SARCON &= 0xf7;
 147   1      return v;
 148   1      
 149   1      }
 150          
 151          static void timer0(void) interrupt 1
 152          {               
 153   1              //static unsigned char cont = 0;
 154   1              //IE = 0;        // 禁止中断
 155   1              //P1 &= ~(1<<5);
 156   1              /*if(cont==40){
 157   1                      P1 |= (1<<5);
 158   1                      cont = 0;
 159   1                      }*/
 160   1              P0 ^= (1<<1);//P1 ^= (1<<5);
 161   1              TL0 = 0xCF;
 162   1              TH0 = 0xAF;
 163   1              /*if(cont){
 164   1                      cont = 0;
 165   1                      P1 &= ~(1<<5);
 166   1              }else{
 167   1                      cont = 1;
 168   1                      P1 |= (1<<5);
 169   1                      }*/
 170   1              //TCON |= (1<<4);
 171   1              //IE = 0x02;  // 打开中断
 172   1      }
 173          void TestEEPROM(void)
 174          {
 175   1              unsigned int addr=ADDRESS_PLU;
 176   1              float val;
C51 COMPILER V7.50   MAIN                                                                  09/19/2022 12:19:57 PAGE 4   

 177   1              unsigned char txt[10]={0};
 178   1              float i=0.12;
 179   1      
 180   1              unsigned int x=0;
 181   1       
 182   1              NRM_securty_a = 0xaa;
 183   1              NRM_securty_b = 0x55;
 184   1              
 185   1              flash_write_float32(addr,0.00);
 186   1              flash_write_float32(addr+11,0.00);
 187   1      
 188   1              while(1){       
 189   2              for(x=1;x<11;x++){
 190   3              flash_write_float32(addr+(x*4),i);
 191   3      
 192   3              val = flash_read_float32(addr+(x*4)-4);
 193   3              sprintf(txt,"%f",val);  LCD_GLASS_String(txt,LCD_PESO); 
 194   3      
 195   3              val = flash_read_float32(addr+(x*4));
 196   3              sprintf(txt,"%f",val);  LCD_GLASS_String(txt,LCD_TOTAL);        
 197   3      
 198   3              val = flash_read_float32(addr+(x*4)+4);
 199   3              sprintf(txt,"%f",val);  LCD_GLASS_String(txt,LCD_PRECIO); 
 200   3      
 201   3              i++;
 202   3              delay_ms(1000);
 203   3              }
 204   2      }
 205   1      
 206   1      NRM_securty_a = 0x00;
 207   1              NRM_securty_b = 0x00;
 208   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    835    ----
   CONSTANT SIZE    =     32    ----
   XDATA SIZE       =     14      27
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  2 WARNING(S),  0 ERROR(S)
